.include "m328PBdef.inc" ;ATmega328P microcontroller definitions
 
.def temp = r16
.def ADC_L = r21
.def ADC_H = r22
;.equ PD3 = 3
;.equ PD2 = 2
 
.org 0x00
rjmp main
.org 0x2A ;ADC Conversion Complete Interrupt
rjmp ADC_ROUTINE
reti



main:
ldi r24, low(RAMEND)
out SPL, r24
ldi r24, high(RAMEND)
out SPH, r24 ; ???????????? stack pointer


ser r24
out DDRD, r24 ; ???????????? PORTD ??? ????????? ? ?????, ?? ??????
out DDRB, r24 ; ???????????? PORTD ??? ????????? ? ?????, ?? ??????
clr r24
out DDRC, r24


; REFSn[1:0]=01 => select Vref=5V, MUXn[4:0]=0000 => select ADC0(pin PC0),
 ; ADLAR=1 => Left adjust the ADC result
 ldi temp, 0b01100000 ; 
 sts ADMUX, temp
 ; ADEN=1 => ADC Enable, ADCS=0 => No Conversion,
 ; ADIE=0 => disable adc interrupt, ADPS[2:0]=111 => fADC=16MHz/128=125KHz
 ldi temp, 0b10001111
 sts ADCSRA, temp
sei
 
 
 
main1: 
    
rcall lcd_init ; ???????????? ??????
ldi r24, low(2)
ldi r25, high(2) ; ??????? 2 msec
rcall wait_msec
    

       

lds temp, ADCSRA ;
;ori temp,( 1 << ADIE);
ori temp, (1<<ADSC) ; Set ADSC flag of ADCSRA

sts ADCSRA, temp 
    

    
subi r20, -1
out  PORTB, r20
cpi r20,63
brlo continue
clr r20
continue:    
ldi r24 ,low(10000)
ldi r25 ,high(10000)
rcall wait_msec
    
rjmp main1
    








lcd_init: 
ldi r24 ,40 ; ???? ? ???????? ??? lcd ????????????? ?? 
ldi r25 ,0 ; ????? ??????? ??? ???? ??? ????????????.
rcall wait_msec ; ??????? 40 msec ????? ???? ?? ???????????.
ldi r24 ,0x30 ; ?????? ????????? ?? 8 bit mode
out PORTD ,r24 ; ?????? ??? ???????? ?? ??????? ???????
sbi PORTD ,3 ; ??? ?? ?????????? ??????? ??? ???????
    nop
    nop
cbi PORTD ,3 ; ??? ??????, ? ?????? ???????????? ??? ?????
    nop
    nop
ldi r24 ,1
ldi r25 ,0 ; ??? ? ???????? ??? ?????? ????????? ?? 8-bit mode
rcall wait_msec ; ??? ?? ?????? ??????, ???? ?? ? ???????? ???? ??????????
 ; ??????? 4 bit ?? ??????? ?? ?????????? 8 bit
 ldi r24 ,0x30 
out PORTD ,r24
 sbi PORTD ,3
 nop
 nop
cbi PORTD ,3
 nop
 nop
ldi r24 ,1
ldi r25 ,0
rcall wait_msec 
ldi r24 ,0x20 ; ?????? ?? 4-bit mode
out PORTD ,r24
 sbi PORTD ,3
 nop
 nop
cbi PORTD ,3
 nop
 nop
ldi r24 ,1
ldi r25 ,0
rcall wait_msec 
 ldi r24 ,0x28 ; ??????? ?????????? ???????? 5x8 ????????
 rcall lcd_command ; ??? ???????? ??? ??????? ???? ?????
ldi r24 ,0x0c ; ???????????? ??? ??????, ???????? ??? ???????
 rcall lcd_command 
 ldi r24 ,0x01 ; ?????????? ??? ??????
rcall lcd_command
ldi r24 ,low(10)
ldi r25 ,high(10)
rcall wait_msec 
 ldi r24 ,0x06 ; ???????????? ????????? ??????? ???? 1 ??? ?????????? 
rcall lcd_command ; ??? ????? ???????????? ???? ??????? ??????????? ???  
                  ; ?????????????? ??? ????????? ????????? ??? ??????
ret














write_2_nibbles:
push r24 ; ??????? ?? 4 MSB 
in r25 ,PIND ; ??????????? ?? 4 LSB ??? ?? ?????????????
andi r25 ,0x0f ; ??? ?? ??? ????????? ??? ????? ??????????? ?????????
andi r24 ,0xf0 ; ????????????? ?? 4 MSB ??? 
add r24 ,r25 ; ???????????? ?? ?? ???????????? 4 LSB
out PORTD ,r24 ; ??? ???????? ???? ?????
 sbi PORTD ,3 ; ????????????? ?????? Enable ???? ????????? PD3 
cbi PORTD ,3 ; PD3=1 ??? ???? PD3=0
pop r24 ; ??????? ?? 4 LSB. ????????? ?? byte.
 swap r24 ; ????????????? ?? 4 MSB ?? ?? 4 LSB
andi r24 ,0xf0 ; ??? ?? ??? ????? ???? ????????????? 
add r24 ,r25
out PORTD ,r24
 sbi PORTD ,3 ; ???? ?????? Enable
 nop
 nop
cbi PORTD ,3
 nop
 nop
ret






lcd_data:
sbi PORTD ,2 ; ??????? ??? ?????????? ????????? (PD2=1)
rcall write_2_nibbles ; ???????? ??? byte
ldi r24 ,10 ; ??????? 43?sec ????? ?? ??????????? ? ????
ldi r25 ,0 ; ??? ????????? ??? ??? ??????? ??? lcd
rcall wait_msec
ret






lcd_command:
cbi PORTD ,2 ; ??????? ??? ?????????? ??????? (PD2=1)
rcall write_2_nibbles ; ???????? ??? ??????? ??? ??????? 39?sec
ldi r24 ,10 ; ??? ??? ?????????? ??? ????????? ??? ??? ??? ??????? ??? lcd.
ldi r25 ,0 ; ???.: ???????? ??? ???????, clear display ??? return home, 
rcall wait_msec ; ??? ???????? ????????? ?????????? ??????? ????????.
ret

 
 
 


ADC_ROUTINE:

push r24
push r25

    
lds ADC_L,ADCL ; Read ADC result(Left adjusted)
lds ADC_H,ADCH ;
mov r24, ADC_H   
mov r25, ADC_L
    
clr r17
clr r18
clr r19

    
first_bcd:
    cpi r24, 51
    brsh first_single
    
    
shifts:
    rol r25
    rol r24
    rol r25
    rol r24
    

    
bcd:    
    cpi r24, 204
    brsh single
bcd2:
    cpi r24, 20
    brsh first
bcd3:
    cpi r24, 2
    brsh second
    rjmp done

second:
    subi r19, -1
    subi r24, 2
    rjmp bcd3
    
    
first:
    subi r18, -1
    subi r24, 20
    rjmp bcd2
    
single:
    subi r17, -1    ;r17 ekatontades
    subi r24, 204
    rjmp bcd
    
first_single:
    subi r17, -1
    subi r24, 51
    cpi r24, 51
    brlo shifts
    rjmp first_bcd
    
    
done:
    ori r17, 0b00110000
    mov r24, r17
    rcall lcd_data
    ldi r24, ','
    rcall lcd_data
    ori r18, 0b00110000
    mov r24, r18
    rcall lcd_data
    ori r19, 0b00110000
    mov r24, r19
    rcall lcd_data
    
    
    ldi r24, low(2000)
    ldi r25, high(2000) ; ??????? 2 sec
    rcall wait_msec
    
    

    pop r25
    pop r24
reti
 
wait_msec:		;delay routine used in previous exercises too

ldi r23, 249

loop_inn:

dec r23
nop
brne loop_inn
sbiw r24, 1
brne wait_msec
ret 
 
 





