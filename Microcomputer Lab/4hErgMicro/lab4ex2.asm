.include "m328PBdef.inc" ;ATmega328P microcontroller definitions
 
.def temp = r16
.def ADC_L = r21
.def ADC_H = r22

 
.org 0x00
rjmp main
.org 0x2A ;ADC Conversion Complete Interrupt
rjmp ADC_ROUTINE
    




main:
ldi r24, low(RAMEND)
out SPL, r24
ldi r24, high(RAMEND)
out SPH, r24 ; ???????????? stack pointer


ser r24
out DDRD, r24 ; ???????????? PORTD ??? ????????? ? ?????, ?? ??????
out DDRB, r24 ; ???????????? PORTD ??? ????????? ? ?????, ?? ??????
clr r24
out DDRC, r24


; REFSn[1:0]=01 => select Vref=5V, MUXn[4:0]=0000 => select ADC0(pin PC0),
 ; ADLAR=1 => Left adjust the ADC result
 ldi temp, 0b01100011 ; 
 sts ADMUX, temp
 ; ADEN=1 => ADC Enable, ADCS=0 => No Conversion,
 ; ADIE=0 => disable adc interrupt, ADPS[2:0]=111 => fADC=16MHz/128=125KHz
 ldi temp, 0b10001111
 sts ADCSRA, temp
sei
 
 
main1: 
rcall lcd_init ; ???????????? ??????
ldi r24, low(2)
ldi r25, high(2) ; ??????? 2 msec
rcall wait_msec
    
    
lds temp, ADCSRA ;
ori temp, (1<<ADSC) ; Set ADSC flag of ADCSRA
sts ADCSRA, temp 

;wait_adc:
; lds temp, ADCSRA ;
; sbrc temp,ADSC ; Wait until ADSC flag of ADCSRA becomes 0 
; rjmp wait_adc

ldi r24 ,low(100)
ldi r25 ,high(100)
rcall wait_msec 

;cpi r19, 0
;breq  do_nothing

rjmp main1
    
    
    
    




lcd_init: 
ldi r24 ,40 ; ???? ? ???????? ??? lcd ????????????? ?? 
ldi r25 ,0 ; ????? ??????? ??? ???? ??? ????????????.
rcall wait_msec ; ??????? 40 msec ????? ???? ?? ???????????.
ldi r24 ,0x30 ; ?????? ????????? ?? 8 bit mode
out PORTD ,r24 ; ?????? ??? ???????? ?? ??????? ???????
 sbi PORTD ,3 ; ??? ?? ?????????? ??????? ??? ???????
cbi PORTD ,3 ; ??? ??????, ? ?????? ???????????? ??? ?????
ldi r24 ,1
ldi r25 ,0 ; ??? ? ???????? ??? ?????? ????????? ?? 8-bit mode
rcall wait_msec ; ??? ?? ?????? ??????, ???? ?? ? ???????? ???? ??????????
 ; ??????? 4 bit ?? ??????? ?? ?????????? 8 bit
 ldi r24 ,0x30 
out PORTD ,r24
 sbi PORTD ,3
cbi PORTD ,3
ldi r24 ,1
ldi r25 ,0
rcall wait_msec 
ldi r24 ,0x20 ; ?????? ?? 4-bit mode
out PORTD ,r24
 sbi PORTD ,3
cbi PORTD ,3
ldi r24 ,1
ldi r25 ,0
rcall wait_msec 
 ldi r24 ,0x28 ; ??????? ?????????? ???????? 5x8 ????????
 rcall lcd_command ; ??? ???????? ??? ??????? ???? ?????
ldi r24 ,0x0c ; ???????????? ??? ??????, ???????? ??? ???????
 rcall lcd_command 
 ldi r24 ,0x01 ; ?????????? ??? ??????
rcall lcd_command
ldi r24 ,low(10)
ldi r25 ,high(10)
rcall wait_msec 
 ldi r24 ,0x06 ; ???????????? ????????? ??????? ???? 1 ??? ?????????? 
rcall lcd_command ; ??? ????? ???????????? ???? ??????? ??????????? ???  
                  ; ?????????????? ??? ????????? ????????? ??? ??????
ret














write_2_nibbles:
push r24 ; ??????? ?? 4 MSB 
in r25 ,PIND ; ??????????? ?? 4 LSB ??? ?? ?????????????
andi r25 ,0x0f ; ??? ?? ??? ????????? ??? ????? ??????????? ?????????
andi r24 ,0xf0 ; ????????????? ?? 4 MSB ??? 
add r24 ,r25 ; ???????????? ?? ?? ???????????? 4 LSB
out PORTD ,r24 ; ??? ???????? ???? ?????
 sbi PORTD ,3 ; ????????????? ?????? Enable ???? ????????? PD3 
cbi PORTD ,3 ; PD3=1 ??? ???? PD3=0
pop r24 ; ??????? ?? 4 LSB. ????????? ?? byte.
 swap r24 ; ????????????? ?? 4 MSB ?? ?? 4 LSB
andi r24 ,0xf0 ; ??? ?? ??? ????? ???? ????????????? 
add r24 ,r25
out PORTD ,r24
 sbi PORTD ,3 ; ???? ?????? Enable
 nop
 nop
cbi PORTD ,3
 nop
 nop
ret






lcd_data:
sbi PORTD ,2 ; ??????? ??? ?????????? ????????? (PD2=1)
rcall write_2_nibbles ; ???????? ??? byte
ldi r24 ,10 ; ??????? 43?sec ????? ?? ??????????? ? ????
ldi r25 ,0 ; ??? ????????? ??? ??? ??????? ??? lcd
rcall wait_msec
ret






lcd_command:
cbi PORTD ,2 ; ??????? ??? ?????????? ??????? (PD2=1)
rcall write_2_nibbles ; ???????? ??? ??????? ??? ??????? 39?sec
 ldi r24 ,10 ; ??? ??? ?????????? ??? ????????? ??? ??? ??? ??????? ??? lcd.
ldi r25 ,0 ; ???.: ???????? ??? ???????, clear display ??? return home, 
rcall wait_msec ; ??? ???????? ????????? ?????????? ??????? ????????.
ret    
 
 
 
 
ADC_ROUTINE:
push r24
push r25
    
    
clr r19
lds ADC_L,ADCL ; Read ADC result(Left adjusted)
lds ADC_H,ADCH ;
;lsr ADC_H
mov r24, ADC_H
mov r25, ADC_L

    
;R24 HAS Cx
ldi r29, 0b00100000        
cpi r24, 220
brsh display
ldi r29, 0b00010000        
cpi r24, 160
brsh display
ldi r29, 0b00001000        
cpi r24, 80
brsh display
ldi r29, 0b00000100        
cpi r24, 40
brsh display
ldi r29, 0b00000010        
cpi r24, 20
brsh display
ldi r29, 0b00000001        

    

    
display:
    out PORTB, r29
    cpi r24, 51
    brsh GAS_DETECTED
    rol r25
    rol r24
    rol r25
    rol r24
    cpi r24, 204
    brsh GAS_DETECTED
    
    
CLEAR:
    ldi r19, 0
   ; cpi r30, 0x00
   ; breq done
    ldi r31, 0x00
    ldi r24, 'C'
    rcall lcd_data
    ldi r24, 'L'
    rcall lcd_data
    ldi r24, 'E'
    rcall lcd_data
    ldi r24, 'A'
    rcall lcd_data
    ldi r24, 'R'
    rcall lcd_data
    
    ldi r24, low(2000)
    ldi r25, high(2000) ; ??????? 2 sec
    rcall wait_msec   
    rjmp done
    
    

 GAS_DETECTED:
    cpi r28, 1      ;r28 = 1 open, r28 = 0 close
    breq blink
    ldi r28, 1
    rjmp do_nothing   
    blink:    
    clr r29    
    out PORTB, r29
    ldi r28, 0    
    do_nothing:  
    
    ldi r19, 1
    ;cpi r31, 0x01
    ;breq done
    ldi r31, 0x01
    ldi r24, 'G'
    rcall lcd_data
    ldi r24, 'A'
    rcall lcd_data
    ldi r24, 'S'
    rcall lcd_data
    ldi r24, ' '
    rcall lcd_data
    ldi r24, 'D'
    rcall lcd_data
    ldi r24, 'E'
    rcall lcd_data
    ldi r24, 'T'
    rcall lcd_data
    ldi r24, 'E'
    rcall lcd_data
    ldi r24, 'C'
    rcall lcd_data
    ldi r24, 'T'
    rcall lcd_data
    ldi r24, 'E'
    rcall lcd_data
    ldi r24, 'D'
    rcall lcd_data
    
    ldi r24, low(2000)
    ldi r25, high(2000) ; ??????? 2 sec
    rcall wait_msec

    
    
  
    
done:
    
    pop r25
    pop r24
    
    
    reti
    
wait_msec:		;delay routine used in previous exercises too

ldi r23, 249

loop_inn:

dec r23
nop
brne loop_inn
sbiw r24, 1
brne wait_msec
ret     
    
    
    
    
    
    

   


